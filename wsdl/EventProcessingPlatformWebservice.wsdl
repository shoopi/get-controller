<?xml version="1.0" encoding="UTF-8"?>
<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns1="http://org.apache.axis2/xsd" xmlns:ns="http://hpi.de" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:ax23="http://xml.importer.eap.hpi/xsd" xmlns:ax21="http://hpi.de/xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" targetNamespace="http://hpi.de">
   <wsdl:documentation>EventProcessingPlatformWebservice</wsdl:documentation>
   <wsdl:types>
      <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://hpi.de/xsd">
         <xs:complexType name="DuplicatedSchemaException">
            <xs:sequence/>
         </xs:complexType>
         <xs:complexType name="UnparsableException">
            <xs:sequence/>
         </xs:complexType>
      </xs:schema>
      <xs:schema attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://xml.importer.eap.hpi/xsd">
         <xs:complexType name="XMLParsingException">
            <xs:sequence/>
         </xs:complexType>
      </xs:schema>
      <xs:schema xmlns:ax24="http://xml.importer.eap.hpi/xsd" xmlns:ax22="http://hpi.de/xsd" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://hpi.de">
         <xs:import namespace="http://hpi.de/xsd"/>
         <xs:import namespace="http://xml.importer.eap.hpi/xsd"/>
         <xs:element name="registerQueryForQueue">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="title" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="queryString" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="eMail" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="registerQueryForQueueResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="unregisterQueryFromQueue">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="uuid" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="unregisterQueryFromQueueResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="return" type="xs:boolean"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="unregisterQueriesFromQueue">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="email" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="unregisterQueriesFromQueueResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="return" type="xs:int"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="registerEventAggregationRule">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="ruleName" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="eventTypeName" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="eventAggregationRule" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="registerEventAggregationRuleResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="unregisterEventAggregationRule">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="ruleName" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="eventTypeName" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="unregisterEventAggregationRuleResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="return" type="xs:boolean"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="registerEventCorrelationRule">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="process" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="firstEventType" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="firstAttribute" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="secondEventType" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="secondAttribute" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="registerEventCorrelationRuleResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="return" type="xs:boolean"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="importSemanticEventMapping">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="mappingContent" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="associatedEventTypeName" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="importSemanticEventMappingResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="return" type="xs:boolean"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="importRoute">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="xml" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="importRouteResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="return" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="EventProcessingPlatformWebserviceDuplicatedSchemaException">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="DuplicatedSchemaException" nillable="true" type="ax21:DuplicatedSchemaException"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="EventProcessingPlatformWebserviceUnparsableException">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="UnparsableException" nillable="true" type="ax21:UnparsableException"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="registerEventType">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="xsd" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="schemaName" nillable="true" type="xs:string"/>
                  <xs:element minOccurs="0" name="timestampName" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="getAllEventTypes">
            <xs:complexType>
               <xs:sequence/>
            </xs:complexType>
         </xs:element>
         <xs:element name="getAllEventTypesResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element maxOccurs="unbounded" minOccurs="0" name="return" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="unregisterEventType">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="schemaName" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="unregisterEventTypeResponse">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="return" type="xs:boolean"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="EventProcessingPlatformWebserviceXMLParsingException">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="XMLParsingException" nillable="true" type="ax23:XMLParsingException"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
         <xs:element name="importEvents">
            <xs:complexType>
               <xs:sequence>
                  <xs:element minOccurs="0" name="xml" nillable="true" type="xs:string"/>
               </xs:sequence>
            </xs:complexType>
         </xs:element>
      </xs:schema>
   </wsdl:types>
   <wsdl:message name="importEventsRequest">
      <wsdl:part name="parameters" element="ns:importEvents"/>
   </wsdl:message>
   <wsdl:message name="importEventsResponse"/>
   <wsdl:message name="EventProcessingPlatformWebserviceXMLParsingException">
      <wsdl:part name="parameters" element="ns:EventProcessingPlatformWebserviceXMLParsingException"/>
   </wsdl:message>
   <wsdl:message name="EventProcessingPlatformWebserviceUnparsableException">
      <wsdl:part name="parameters" element="ns:EventProcessingPlatformWebserviceUnparsableException"/>
   </wsdl:message>
   <wsdl:message name="unregisterEventAggregationRuleRequest">
      <wsdl:part name="parameters" element="ns:unregisterEventAggregationRule"/>
   </wsdl:message>
   <wsdl:message name="unregisterEventAggregationRuleResponse">
      <wsdl:part name="parameters" element="ns:unregisterEventAggregationRuleResponse"/>
   </wsdl:message>
   <wsdl:message name="registerEventTypeRequest">
      <wsdl:part name="parameters" element="ns:registerEventType"/>
   </wsdl:message>
   <wsdl:message name="registerEventTypeResponse"/>
   <wsdl:message name="EventProcessingPlatformWebserviceDuplicatedSchemaException">
      <wsdl:part name="parameters" element="ns:EventProcessingPlatformWebserviceDuplicatedSchemaException"/>
   </wsdl:message>
   <wsdl:message name="unregisterEventTypeRequest">
      <wsdl:part name="parameters" element="ns:unregisterEventType"/>
   </wsdl:message>
   <wsdl:message name="unregisterEventTypeResponse">
      <wsdl:part name="parameters" element="ns:unregisterEventTypeResponse"/>
   </wsdl:message>
   <wsdl:message name="importRouteRequest">
      <wsdl:part name="parameters" element="ns:importRoute"/>
   </wsdl:message>
   <wsdl:message name="importRouteResponse">
      <wsdl:part name="parameters" element="ns:importRouteResponse"/>
   </wsdl:message>
   <wsdl:message name="unregisterQueryFromQueueRequest">
      <wsdl:part name="parameters" element="ns:unregisterQueryFromQueue"/>
   </wsdl:message>
   <wsdl:message name="unregisterQueryFromQueueResponse">
      <wsdl:part name="parameters" element="ns:unregisterQueryFromQueueResponse"/>
   </wsdl:message>
   <wsdl:message name="importSemanticEventMappingRequest">
      <wsdl:part name="parameters" element="ns:importSemanticEventMapping"/>
   </wsdl:message>
   <wsdl:message name="importSemanticEventMappingResponse">
      <wsdl:part name="parameters" element="ns:importSemanticEventMappingResponse"/>
   </wsdl:message>
   <wsdl:message name="registerEventCorrelationRuleRequest">
      <wsdl:part name="parameters" element="ns:registerEventCorrelationRule"/>
   </wsdl:message>
   <wsdl:message name="registerEventCorrelationRuleResponse">
      <wsdl:part name="parameters" element="ns:registerEventCorrelationRuleResponse"/>
   </wsdl:message>
   <wsdl:message name="registerQueryForQueueRequest">
      <wsdl:part name="parameters" element="ns:registerQueryForQueue"/>
   </wsdl:message>
   <wsdl:message name="registerQueryForQueueResponse">
      <wsdl:part name="parameters" element="ns:registerQueryForQueueResponse"/>
   </wsdl:message>
   <wsdl:message name="unregisterQueriesFromQueueRequest">
      <wsdl:part name="parameters" element="ns:unregisterQueriesFromQueue"/>
   </wsdl:message>
   <wsdl:message name="unregisterQueriesFromQueueResponse">
      <wsdl:part name="parameters" element="ns:unregisterQueriesFromQueueResponse"/>
   </wsdl:message>
   <wsdl:message name="registerEventAggregationRuleRequest">
      <wsdl:part name="parameters" element="ns:registerEventAggregationRule"/>
   </wsdl:message>
   <wsdl:message name="registerEventAggregationRuleResponse">
      <wsdl:part name="parameters" element="ns:registerEventAggregationRuleResponse"/>
   </wsdl:message>
   <wsdl:message name="getAllEventTypesRequest">
      <wsdl:part name="parameters" element="ns:getAllEventTypes"/>
   </wsdl:message>
   <wsdl:message name="getAllEventTypesResponse">
      <wsdl:part name="parameters" element="ns:getAllEventTypesResponse"/>
   </wsdl:message>
   <wsdl:portType name="EventProcessingPlatformWebservicePortType">
      <wsdl:operation name="importEvents">
         <wsdl:input message="ns:importEventsRequest" wsaw:Action="urn:importEvents"/>
         <wsdl:output message="ns:importEventsResponse" wsaw:Action="urn:importEventsResponse"/>
         <wsdl:fault message="ns:EventProcessingPlatformWebserviceXMLParsingException" name="EventProcessingPlatformWebserviceXMLParsingException" wsaw:Action="urn:importEventsEventProcessingPlatformWebserviceXMLParsingException"/>
         <wsdl:fault message="ns:EventProcessingPlatformWebserviceUnparsableException" name="EventProcessingPlatformWebserviceUnparsableException" wsaw:Action="urn:importEventsEventProcessingPlatformWebserviceUnparsableException"/>
      </wsdl:operation>
      <wsdl:operation name="unregisterEventAggregationRule">
         <wsdl:input message="ns:unregisterEventAggregationRuleRequest" wsaw:Action="urn:unregisterEventAggregationRule"/>
         <wsdl:output message="ns:unregisterEventAggregationRuleResponse" wsaw:Action="urn:unregisterEventAggregationRuleResponse"/>
      </wsdl:operation>
      <wsdl:operation name="registerEventType">
         <wsdl:input message="ns:registerEventTypeRequest" wsaw:Action="urn:registerEventType"/>
         <wsdl:output message="ns:registerEventTypeResponse" wsaw:Action="urn:registerEventTypeResponse"/>
         <wsdl:fault message="ns:EventProcessingPlatformWebserviceDuplicatedSchemaException" name="EventProcessingPlatformWebserviceDuplicatedSchemaException" wsaw:Action="urn:registerEventTypeEventProcessingPlatformWebserviceDuplicatedSchemaException"/>
         <wsdl:fault message="ns:EventProcessingPlatformWebserviceUnparsableException" name="EventProcessingPlatformWebserviceUnparsableException" wsaw:Action="urn:registerEventTypeEventProcessingPlatformWebserviceUnparsableException"/>
      </wsdl:operation>
      <wsdl:operation name="unregisterEventType">
         <wsdl:input message="ns:unregisterEventTypeRequest" wsaw:Action="urn:unregisterEventType"/>
         <wsdl:output message="ns:unregisterEventTypeResponse" wsaw:Action="urn:unregisterEventTypeResponse"/>
      </wsdl:operation>
      <wsdl:operation name="importRoute">
         <wsdl:input message="ns:importRouteRequest" wsaw:Action="urn:importRoute"/>
         <wsdl:output message="ns:importRouteResponse" wsaw:Action="urn:importRouteResponse"/>
      </wsdl:operation>
      <wsdl:operation name="unregisterQueryFromQueue">
         <wsdl:input message="ns:unregisterQueryFromQueueRequest" wsaw:Action="urn:unregisterQueryFromQueue"/>
         <wsdl:output message="ns:unregisterQueryFromQueueResponse" wsaw:Action="urn:unregisterQueryFromQueueResponse"/>
      </wsdl:operation>
      <wsdl:operation name="importSemanticEventMapping">
         <wsdl:input message="ns:importSemanticEventMappingRequest" wsaw:Action="urn:importSemanticEventMapping"/>
         <wsdl:output message="ns:importSemanticEventMappingResponse" wsaw:Action="urn:importSemanticEventMappingResponse"/>
      </wsdl:operation>
      <wsdl:operation name="registerEventCorrelationRule">
         <wsdl:input message="ns:registerEventCorrelationRuleRequest" wsaw:Action="urn:registerEventCorrelationRule"/>
         <wsdl:output message="ns:registerEventCorrelationRuleResponse" wsaw:Action="urn:registerEventCorrelationRuleResponse"/>
      </wsdl:operation>
      <wsdl:operation name="registerQueryForQueue">
         <wsdl:input message="ns:registerQueryForQueueRequest" wsaw:Action="urn:registerQueryForQueue"/>
         <wsdl:output message="ns:registerQueryForQueueResponse" wsaw:Action="urn:registerQueryForQueueResponse"/>
      </wsdl:operation>
      <wsdl:operation name="unregisterQueriesFromQueue">
         <wsdl:input message="ns:unregisterQueriesFromQueueRequest" wsaw:Action="urn:unregisterQueriesFromQueue"/>
         <wsdl:output message="ns:unregisterQueriesFromQueueResponse" wsaw:Action="urn:unregisterQueriesFromQueueResponse"/>
      </wsdl:operation>
      <wsdl:operation name="registerEventAggregationRule">
         <wsdl:input message="ns:registerEventAggregationRuleRequest" wsaw:Action="urn:registerEventAggregationRule"/>
         <wsdl:output message="ns:registerEventAggregationRuleResponse" wsaw:Action="urn:registerEventAggregationRuleResponse"/>
      </wsdl:operation>
      <wsdl:operation name="getAllEventTypes">
         <wsdl:input message="ns:getAllEventTypesRequest" wsaw:Action="urn:getAllEventTypes"/>
         <wsdl:output message="ns:getAllEventTypesResponse" wsaw:Action="urn:getAllEventTypesResponse"/>
      </wsdl:operation>
   </wsdl:portType>
   <wsdl:binding name="EventProcessingPlatformWebserviceSoap11Binding" type="ns:EventProcessingPlatformWebservicePortType">
      <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
      <wsdl:operation name="importEvents">
         <soap:operation soapAction="urn:importEvents" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="EventProcessingPlatformWebserviceXMLParsingException">
            <soap:fault use="literal" name="EventProcessingPlatformWebserviceXMLParsingException"/>
         </wsdl:fault>
         <wsdl:fault name="EventProcessingPlatformWebserviceUnparsableException">
            <soap:fault use="literal" name="EventProcessingPlatformWebserviceUnparsableException"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="unregisterEventAggregationRule">
         <soap:operation soapAction="urn:unregisterEventAggregationRule" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerEventType">
         <soap:operation soapAction="urn:registerEventType" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="EventProcessingPlatformWebserviceUnparsableException">
            <soap:fault use="literal" name="EventProcessingPlatformWebserviceUnparsableException"/>
         </wsdl:fault>
         <wsdl:fault name="EventProcessingPlatformWebserviceDuplicatedSchemaException">
            <soap:fault use="literal" name="EventProcessingPlatformWebserviceDuplicatedSchemaException"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="unregisterEventType">
         <soap:operation soapAction="urn:unregisterEventType" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="importRoute">
         <soap:operation soapAction="urn:importRoute" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="unregisterQueryFromQueue">
         <soap:operation soapAction="urn:unregisterQueryFromQueue" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="importSemanticEventMapping">
         <soap:operation soapAction="urn:importSemanticEventMapping" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerEventCorrelationRule">
         <soap:operation soapAction="urn:registerEventCorrelationRule" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerQueryForQueue">
         <soap:operation soapAction="urn:registerQueryForQueue" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="unregisterQueriesFromQueue">
         <soap:operation soapAction="urn:unregisterQueriesFromQueue" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerEventAggregationRule">
         <soap:operation soapAction="urn:registerEventAggregationRule" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="getAllEventTypes">
         <soap:operation soapAction="urn:getAllEventTypes" style="document"/>
         <wsdl:input>
            <soap:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
   </wsdl:binding>
   <wsdl:binding name="EventProcessingPlatformWebserviceSoap12Binding" type="ns:EventProcessingPlatformWebservicePortType">
      <soap12:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
      <wsdl:operation name="importEvents">
         <soap12:operation soapAction="urn:importEvents" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="EventProcessingPlatformWebserviceXMLParsingException">
            <soap12:fault use="literal" name="EventProcessingPlatformWebserviceXMLParsingException"/>
         </wsdl:fault>
         <wsdl:fault name="EventProcessingPlatformWebserviceUnparsableException">
            <soap12:fault use="literal" name="EventProcessingPlatformWebserviceUnparsableException"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="unregisterEventAggregationRule">
         <soap12:operation soapAction="urn:unregisterEventAggregationRule" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerEventType">
         <soap12:operation soapAction="urn:registerEventType" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
         <wsdl:fault name="EventProcessingPlatformWebserviceUnparsableException">
            <soap12:fault use="literal" name="EventProcessingPlatformWebserviceUnparsableException"/>
         </wsdl:fault>
         <wsdl:fault name="EventProcessingPlatformWebserviceDuplicatedSchemaException">
            <soap12:fault use="literal" name="EventProcessingPlatformWebserviceDuplicatedSchemaException"/>
         </wsdl:fault>
      </wsdl:operation>
      <wsdl:operation name="unregisterEventType">
         <soap12:operation soapAction="urn:unregisterEventType" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="importRoute">
         <soap12:operation soapAction="urn:importRoute" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="unregisterQueryFromQueue">
         <soap12:operation soapAction="urn:unregisterQueryFromQueue" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="importSemanticEventMapping">
         <soap12:operation soapAction="urn:importSemanticEventMapping" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerEventCorrelationRule">
         <soap12:operation soapAction="urn:registerEventCorrelationRule" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerQueryForQueue">
         <soap12:operation soapAction="urn:registerQueryForQueue" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="unregisterQueriesFromQueue">
         <soap12:operation soapAction="urn:unregisterQueriesFromQueue" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerEventAggregationRule">
         <soap12:operation soapAction="urn:registerEventAggregationRule" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="getAllEventTypes">
         <soap12:operation soapAction="urn:getAllEventTypes" style="document"/>
         <wsdl:input>
            <soap12:body use="literal"/>
         </wsdl:input>
         <wsdl:output>
            <soap12:body use="literal"/>
         </wsdl:output>
      </wsdl:operation>
   </wsdl:binding>
   <wsdl:binding name="EventProcessingPlatformWebserviceHttpBinding" type="ns:EventProcessingPlatformWebservicePortType">
      <http:binding verb="POST"/>
      <wsdl:operation name="importEvents">
         <http:operation location="importEvents"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="unregisterEventAggregationRule">
         <http:operation location="unregisterEventAggregationRule"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerEventType">
         <http:operation location="registerEventType"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="unregisterEventType">
         <http:operation location="unregisterEventType"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="importRoute">
         <http:operation location="importRoute"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="unregisterQueryFromQueue">
         <http:operation location="unregisterQueryFromQueue"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="importSemanticEventMapping">
         <http:operation location="importSemanticEventMapping"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerEventCorrelationRule">
         <http:operation location="registerEventCorrelationRule"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerQueryForQueue">
         <http:operation location="registerQueryForQueue"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="unregisterQueriesFromQueue">
         <http:operation location="unregisterQueriesFromQueue"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="registerEventAggregationRule">
         <http:operation location="registerEventAggregationRule"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
      <wsdl:operation name="getAllEventTypes">
         <http:operation location="getAllEventTypes"/>
         <wsdl:input>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:input>
         <wsdl:output>
            <mime:content type="application/xml" part="parameters"/>
         </wsdl:output>
      </wsdl:operation>
   </wsdl:binding>
   <wsdl:service name="EventProcessingPlatformWebservice">
      <wsdl:port name="EventProcessingPlatformWebserviceHttpSoap11Endpoint" binding="ns:EventProcessingPlatformWebserviceSoap11Binding">
         <soap:address location="http://bpt.hpi.uni-potsdam.de/GETAggregationWebService/services/EventProcessingPlatformWebservice.EventProcessingPlatformWebserviceHttpSoap11Endpoint/"/>
      </wsdl:port>
      <wsdl:port name="EventProcessingPlatformWebserviceHttpSoap12Endpoint" binding="ns:EventProcessingPlatformWebserviceSoap12Binding">
         <soap12:address location="http://bpt.hpi.uni-potsdam.de/GETAggregationWebService/services/EventProcessingPlatformWebservice.EventProcessingPlatformWebserviceHttpSoap12Endpoint/"/>
      </wsdl:port>
      <wsdl:port name="EventProcessingPlatformWebserviceHttpEndpoint" binding="ns:EventProcessingPlatformWebserviceHttpBinding">
         <http:address location="http://bpt.hpi.uni-potsdam.de/GETAggregationWebService/services/EventProcessingPlatformWebservice.EventProcessingPlatformWebserviceHttpEndpoint/"/>
      </wsdl:port>
   </wsdl:service>
</wsdl:definitions>